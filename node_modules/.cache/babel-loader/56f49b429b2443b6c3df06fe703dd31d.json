{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n//slice 안에 들어갈 내용은 name, init, reducers\n\n//리덕스는 root reducer 객체를 가지고 있는데 이 객체의 key/ value쌍을 slice 라고 한다  요걸 업데이트 하는 reducer 함수가 slice reducer\n\n//immer\nexport const popupSlice = createSlice({\n  name: \"popup\",\n  initialState: [{\n    id: 1,\n    list: []\n  }],\n  //reducer 안에 여러가지 함수가 들어갈 수 있음. 더하기 빼기 등등.. 그때마다 name 바꿔줄 필요 없음\n  reducers: {\n    //액션타입은 슬라이스 이름을 접두어로 사용해서 자동 생성 >> 나같은 경우엔 users/addTodo\n    openPopup: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      const {\n        id,\n        list\n      } = payload;\n      state.push({\n        id,\n        list\n      });\n      // state.push(action.payload);\n    }\n  }\n});\n\n//위에 작성이 끝났다면 액션과 리듀서를 export 해준다.\n// export const { addUser } = users.actions;\n// export default users.reducer;\nconst {\n  actions,\n  reducer\n} = popupSlice;\nexport const {\n  openPopup\n} = actions;\nexport default reducer;","map":{"version":3,"names":["createSlice","popupSlice","name","initialState","id","list","reducers","openPopup","state","payload","push","actions","reducer"],"sources":["C:/Users/NL/Desktop/toy/petpat-co-front/src/core/redux/popupSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nexport interface PopupState {\r\n  id: number;\r\n  list: Array<any>;\r\n}\r\n\r\n//slice 안에 들어갈 내용은 name, init, reducers\r\n\r\n//리덕스는 root reducer 객체를 가지고 있는데 이 객체의 key/ value쌍을 slice 라고 한다  요걸 업데이트 하는 reducer 함수가 slice reducer\r\n\r\n//immer\r\nexport const popupSlice = createSlice({\r\n  name: \"popup\",\r\n\r\n  initialState: [{ id: 1, list: [] }] as PopupState[],\r\n  //reducer 안에 여러가지 함수가 들어갈 수 있음. 더하기 빼기 등등.. 그때마다 name 바꿔줄 필요 없음\r\n  reducers: {\r\n    //액션타입은 슬라이스 이름을 접두어로 사용해서 자동 생성 >> 나같은 경우엔 users/addTodo\r\n    openPopup: (state, { payload }: PayloadAction<PopupState>) => {\r\n      const { id, list } = payload;\r\n      state.push({ id, list });\r\n      // state.push(action.payload);\r\n    },\r\n  },\r\n});\r\n\r\n//위에 작성이 끝났다면 액션과 리듀서를 export 해준다.\r\n// export const { addUser } = users.actions;\r\n// export default users.reducer;\r\nconst { actions, reducer } = popupSlice;\r\nexport const { openPopup } = actions;\r\n\r\nexport default reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAM7D;;AAEA;;AAEA;AACA,OAAO,MAAMC,UAAU,GAAGD,WAAW,CAAC;EACpCE,IAAI,EAAE,OAAO;EAEbC,YAAY,EAAE,CAAC;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAiB;EACnD;EACAC,QAAQ,EAAE;IACR;IACAC,SAAS,EAAE,CAACC,KAAK,WAA6C;MAAA,IAA3C;QAAEC;MAAmC,CAAC;MACvD,MAAM;QAAEL,EAAE;QAAEC;MAAK,CAAC,GAAGI,OAAO;MAC5BD,KAAK,CAACE,IAAI,CAAC;QAAEN,EAAE;QAAEC;MAAK,CAAC,CAAC;MACxB;IACF;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA,MAAM;EAAEM,OAAO;EAAEC;AAAQ,CAAC,GAAGX,UAAU;AACvC,OAAO,MAAM;EAAEM;AAAU,CAAC,GAAGI,OAAO;AAEpC,eAAeC,OAAO"},"metadata":{},"sourceType":"module"}